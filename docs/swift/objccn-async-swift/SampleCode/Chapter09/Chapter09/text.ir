; ModuleID = '<swift-imported-modules>'
source_filename = "<swift-imported-modules>"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx11.0.0"

%swift.async_func_pointer = type <{ i32, i32 }>
%swift.full_boxmetadata = type { void (%swift.refcounted*)*, i8**, %swift.type, i32, i8* }
%swift.refcounted = type { %swift.type*, i64 }
%swift.type = type { i64 }
%swift.vwtable = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i64, i64, i32, i32 }
%TScPSg = type <{}>
%swift.opaque = type opaque
%swift.metadata_response = type { %swift.type*, i64 }
%swift.function = type { i8*, %swift.refcounted* }
%swift.type_descriptor = type opaque
%swift.context = type { %swift.context*, void (%swift.context*)*, i64 }
%"$s6Sample5helloyyFytSgyYaYbcfU_.Frame" = type { %swift.context*, i8* }
%swift.error = type opaque
%TytSg = type <{ [1 x i8] }>
%"$sytSgIeghHd_AAIeghHr_TR.Frame" = type { %swift.context*, %TytSg*, i8* }
%"$sytSgIeghHd_AAIeghHr_TRTA.Frame" = type { %swift.context*, i8* }
%swift.async_task_and_context = type { %swift.task*, %swift.context* }
%swift.task = type { %swift.refcounted, i8*, i8*, i32, i32, i8*, i8*, i8*, %swift.context*, i64 }
%"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTR.Frame" = type { %swift.context*, i8* }
%"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTA.Frame" = type { %swift.context*, i8* }

@"symbolic ScPSg" = linkonce_odr hidden constant <{ [5 x i8], i8 }> <{ [5 x i8] c"ScPSg", i8 0 }>, section "__TEXT,__swift5_typeref, regular, no_dead_strip", align 2
@"$sScPSgMD" = linkonce_odr hidden global { i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (<{ [5 x i8], i8 }>* @"symbolic ScPSg" to i64), i64 ptrtoint ({ i32, i32 }* @"$sScPSgMD" to i64)) to i32), i32 -5 }, align 8
@"$s6Sample5helloyyFytSgyYaYbcfU_Tu" = internal global %swift.async_func_pointer <{ i32 trunc (i64 sub (i64 ptrtoint (void (%swift.context*)* @"$s6Sample5helloyyFytSgyYaYbcfU_" to i64), i64 ptrtoint (%swift.async_func_pointer* @"$s6Sample5helloyyFytSgyYaYbcfU_Tu" to i64)) to i32), i32 48 }>, section "__TEXT,__const", align 8
@"$sytSgIeghHd_AAIeghHr_TRTu" = linkonce_odr hidden global %swift.async_func_pointer <{ i32 trunc (i64 sub (i64 ptrtoint (void (%TytSg*, %swift.context*, i8*, %swift.refcounted*)* @"$sytSgIeghHd_AAIeghHr_TR" to i64), i64 ptrtoint (%swift.async_func_pointer* @"$sytSgIeghHd_AAIeghHr_TRTu" to i64)) to i32), i32 48 }>, section "__TEXT,__const", align 8
@"symbolic ytSgIeghHd_" = linkonce_odr hidden constant <{ [11 x i8], i8 }> <{ [11 x i8] c"ytSgIeghHd_", i8 0 }>, section "__TEXT,__swift5_typeref, regular, no_dead_strip", align 2
@"\01l__swift5_reflection_descriptor" = private constant { i32, i32, i32, i32 } { i32 1, i32 0, i32 0, i32 trunc (i64 sub (i64 ptrtoint (<{ [11 x i8], i8 }>* @"symbolic ytSgIeghHd_" to i64), i64 ptrtoint (i32* getelementptr inbounds ({ i32, i32, i32, i32 }, { i32, i32, i32, i32 }* @"\01l__swift5_reflection_descriptor", i32 0, i32 3) to i64)) to i32) }, section "__TEXT,__swift5_capture, regular, no_dead_strip", align 4
@metadata = private constant %swift.full_boxmetadata { void (%swift.refcounted*)* @objectdestroy, i8** null, %swift.type { i64 1024 }, i32 16, i8* bitcast ({ i32, i32, i32, i32 }* @"\01l__swift5_reflection_descriptor" to i8*) }, align 8
@"$sytSgIeghHd_AAIeghHr_TRTATu" = internal global %swift.async_func_pointer <{ i32 trunc (i64 sub (i64 ptrtoint (void (%TytSg*, %swift.context*, %swift.refcounted*)* @"$sytSgIeghHd_AAIeghHr_TRTA" to i64), i64 ptrtoint (%swift.async_func_pointer* @"$sytSgIeghHd_AAIeghHr_TRTATu" to i64)) to i32), i32 48 }>, section "__TEXT,__const", align 8
@"symbolic ytSg" = linkonce_odr hidden constant <{ [4 x i8], i8 }> <{ [4 x i8] c"ytSg", i8 0 }>, section "__TEXT,__swift5_typeref, regular, no_dead_strip", align 2
@"$sytSgMD" = linkonce_odr hidden global { i32, i32 } { i32 trunc (i64 sub (i64 ptrtoint (<{ [4 x i8], i8 }>* @"symbolic ytSg" to i64), i64 ptrtoint ({ i32, i32 }* @"$sytSgMD" to i64)) to i32), i32 -4 }, align 8
@"\01l_entry_point" = private constant { i32 } { i32 trunc (i64 sub (i64 ptrtoint (i32 (i32, i8**)* @main to i64), i64 ptrtoint ({ i32 }* @"\01l_entry_point" to i64)) to i32) }, section "__TEXT, __swift5_entry, regular, no_dead_strip", align 4
@"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTu" = linkonce_odr hidden global %swift.async_func_pointer <{ i32 trunc (i64 sub (i64 ptrtoint (void (%swift.opaque*, %swift.context*, i8*, %swift.refcounted*, %swift.type*)* @"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTR" to i64), i64 ptrtoint (%swift.async_func_pointer* @"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTu" to i64)) to i32), i32 48 }>, section "__TEXT,__const", align 8
@"symbolic xIeghHr_" = linkonce_odr hidden constant <{ [8 x i8], i8 }> <{ [8 x i8] c"xIeghHr_", i8 0 }>, section "__TEXT,__swift5_typeref, regular, no_dead_strip", align 2
@"symbolic x" = linkonce_odr hidden constant <{ [1 x i8], i8 }> <{ [1 x i8] c"x", i8 0 }>, section "__TEXT,__swift5_typeref, regular, no_dead_strip", align 2
@"symbolic B0" = linkonce_odr hidden constant <{ [2 x i8], i8 }> <{ [2 x i8] c"B0", i8 0 }>, section "__TEXT,__swift5_typeref, regular, no_dead_strip", align 2
@"\01l__swift5_reflection_descriptor.1" = private constant { i32, i32, i32, i32, i32, i32 } { i32 1, i32 1, i32 1, i32 trunc (i64 sub (i64 ptrtoint (<{ [8 x i8], i8 }>* @"symbolic xIeghHr_" to i64), i64 ptrtoint (i32* getelementptr inbounds ({ i32, i32, i32, i32, i32, i32 }, { i32, i32, i32, i32, i32, i32 }* @"\01l__swift5_reflection_descriptor.1", i32 0, i32 3) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (<{ [1 x i8], i8 }>* @"symbolic x" to i64), i64 ptrtoint (i32* getelementptr inbounds ({ i32, i32, i32, i32, i32, i32 }, { i32, i32, i32, i32, i32, i32 }* @"\01l__swift5_reflection_descriptor.1", i32 0, i32 4) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (<{ [2 x i8], i8 }>* @"symbolic B0" to i64), i64 ptrtoint (i32* getelementptr inbounds ({ i32, i32, i32, i32, i32, i32 }, { i32, i32, i32, i32, i32, i32 }* @"\01l__swift5_reflection_descriptor.1", i32 0, i32 5) to i64)) to i32) }, section "__TEXT,__swift5_capture, regular, no_dead_strip", align 4
@metadata.3 = private constant %swift.full_boxmetadata { void (%swift.refcounted*)* @objectdestroy.2, i8** null, %swift.type { i64 1024 }, i32 16, i8* bitcast ({ i32, i32, i32, i32, i32, i32 }* @"\01l__swift5_reflection_descriptor.1" to i8*) }, align 8
@"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTATu" = internal global %swift.async_func_pointer <{ i32 trunc (i64 sub (i64 ptrtoint (void (%swift.opaque*, %swift.context*, %swift.refcounted*)* @"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTA" to i64), i64 ptrtoint (%swift.async_func_pointer* @"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTATu" to i64)) to i32), i32 48 }>, section "__TEXT,__const", align 8
@"$sScTss5NeverORszABRs_rlE5sleep11nanosecondsys6UInt64V_tYaKFZTu" = extern_weak global %swift.async_func_pointer, align 8
@__swift_reflection_version = linkonce_odr hidden constant i16 3
@llvm.used = appending global [5 x i8*] [i8* bitcast (i32 (i32, i8**)* @main to i8*), i8* bitcast ({ i32, i32, i32, i32 }* @"\01l__swift5_reflection_descriptor" to i8*), i8* bitcast ({ i32 }* @"\01l_entry_point" to i8*), i8* bitcast ({ i32, i32, i32, i32, i32, i32 }* @"\01l__swift5_reflection_descriptor.1" to i8*), i8* bitcast (i16* @__swift_reflection_version to i8*)], section "llvm.metadata", align 8

define i32 @main(i32 %0, i8** %1) #0 {
entry:
  %2 = bitcast i8** %1 to i8*
  ret i32 0
}

define hidden swiftcc void @"$s6Sample5helloyyF"() #0 {
entry:
  %0 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i32, i32 }* @"$sScPSgMD") #7
  %1 = bitcast %swift.type* %0 to i8***
  %2 = getelementptr inbounds i8**, i8*** %1, i64 -1
  %.valueWitnesses = load i8**, i8*** %2, align 8, !invariant.load !32, !dereferenceable !33
  %3 = bitcast i8** %.valueWitnesses to %swift.vwtable*
  %4 = getelementptr inbounds %swift.vwtable, %swift.vwtable* %3, i32 0, i32 8
  %size = load i64, i64* %4, align 8, !invariant.load !32
  %5 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %5)
  %6 = bitcast i8* %5 to %TScPSg*
  %7 = bitcast %TScPSg* %6 to %swift.opaque*
  %8 = call swiftcc %swift.metadata_response @"$sScPMa"(i64 0) #7
  %9 = extractvalue %swift.metadata_response %8, 0
  %10 = bitcast %swift.type* %9 to i8***
  %11 = getelementptr inbounds i8**, i8*** %10, i64 -1
  %.valueWitnesses1 = load i8**, i8*** %11, align 8, !invariant.load !32, !dereferenceable !33
  %12 = getelementptr inbounds i8*, i8** %.valueWitnesses1, i32 7
  %13 = load i8*, i8** %12, align 8, !invariant.load !32
  %storeEnumTagSinglePayload = bitcast i8* %13 to void (%swift.opaque*, i32, i32, %swift.type*)*
  call void %storeEnumTagSinglePayload(%swift.opaque* noalias %7, i32 1, i32 1, %swift.type* %9) #5
  %14 = call noalias %swift.refcounted* @swift_allocObject(%swift.type* getelementptr inbounds (%swift.full_boxmetadata, %swift.full_boxmetadata* @metadata, i32 0, i32 2), i64 32, i64 7) #5
  %15 = bitcast %swift.refcounted* %14 to <{ %swift.refcounted, %swift.function }>*
  %16 = getelementptr inbounds <{ %swift.refcounted, %swift.function }>, <{ %swift.refcounted, %swift.function }>* %15, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.function, %swift.function* %16, i32 0, i32 0
  store i8* bitcast (%swift.async_func_pointer* @"$s6Sample5helloyyFytSgyYaYbcfU_Tu" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.function, %swift.function* %16, i32 0, i32 1
  store %swift.refcounted* null, %swift.refcounted** %.data, align 8
  %17 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i32, i32 }* @"$sytSgMD") #7
  %18 = call swiftcc %swift.refcounted* @"$sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYbcntcfC"(%TScPSg* noalias nocapture %6, i8* bitcast (%swift.async_func_pointer* @"$sytSgIeghHd_AAIeghHr_TRTATu" to i8*), %swift.refcounted* %14, %swift.type* %17)
  %19 = bitcast %TScPSg* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %19)
  call void @swift_release(%swift.refcounted* %18) #5
  ret void
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i32, i32 }* %0) #1 {
entry:
  %1 = bitcast { i32, i32 }* %0 to i64*
  %2 = load atomic i64, i64* %1 monotonic, align 8
  %3 = icmp slt i64 %2, 0
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 false)
  br i1 %4, label %8, label %5

5:                                                ; preds = %8, %entry
  %6 = phi i64 [ %2, %entry ], [ %17, %8 ]
  %7 = inttoptr i64 %6 to %swift.type*
  ret %swift.type* %7

8:                                                ; preds = %entry
  %9 = ashr i64 %2, 32
  %10 = sub i64 0, %9
  %11 = trunc i64 %2 to i32
  %12 = sext i32 %11 to i64
  %13 = ptrtoint { i32, i32 }* %0 to i64
  %14 = add i64 %13, %12
  %15 = inttoptr i64 %14 to i8*
  %16 = call swiftcc %swift.type* @swift_getTypeByMangledNameInContext(i8* %15, i64 %10, %swift.type_descriptor* null, i8** null) #7
  %17 = ptrtoint %swift.type* %16 to i64
  store atomic i64 %17, i64* %1 monotonic, align 8
  br label %5
}

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #2

; Function Attrs: argmemonly nounwind
declare swiftcc %swift.type* @swift_getTypeByMangledNameInContext(i8*, i64, %swift.type_descriptor*, i8**) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare extern_weak swiftcc %swift.metadata_response @"$sScPMa"(i64) #0

define internal swifttailcc void @"$s6Sample5helloyyFytSgyYaYbcfU_"(%swift.context* swiftasync %0) #0 {
entry:
  call void @coro.devirt.trigger(i8* null)
  %1 = bitcast %swift.context* %0 to i8*
  %async.ctx.frameptr = getelementptr inbounds i8, i8* %1, i32 24
  %FramePtr = bitcast i8* %async.ctx.frameptr to %"$s6Sample5helloyyFytSgyYaYbcfU_.Frame"*
  %2 = getelementptr inbounds %"$s6Sample5helloyyFytSgyYaYbcfU_.Frame", %"$s6Sample5helloyyFytSgyYaYbcfU_.Frame"* %FramePtr, i32 0, i32 0
  store %swift.context* %0, %swift.context** %2, align 8
  %3 = load i32, i32* getelementptr inbounds (%swift.async_func_pointer, %swift.async_func_pointer* @"$sScTss5NeverORszABRs_rlE5sleep11nanosecondsys6UInt64V_tYaKFZTu", i32 0, i32 1), align 8
  %4 = zext i32 %3 to i64
  %5 = call swiftcc i8* @swift_task_alloc(i64 %4) #5
  %.spill.addr = getelementptr inbounds %"$s6Sample5helloyyFytSgyYaYbcfU_.Frame", %"$s6Sample5helloyyFytSgyYaYbcfU_.Frame"* %FramePtr, i32 0, i32 1
  store i8* %5, i8** %.spill.addr, align 8
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %5)
  %6 = bitcast i8* %5 to <{ %swift.context*, void (%swift.context*)*, i32 }>*
  %7 = load %swift.context*, %swift.context** %2, align 8
  %8 = getelementptr inbounds <{ %swift.context*, void (%swift.context*)*, i32 }>, <{ %swift.context*, void (%swift.context*)*, i32 }>* %6, i32 0, i32 0
  store %swift.context* %7, %swift.context** %8, align 8
  %9 = getelementptr inbounds <{ %swift.context*, void (%swift.context*)*, i32 }>, <{ %swift.context*, void (%swift.context*)*, i32 }>* %6, i32 0, i32 1
  store void (%swift.context*)* bitcast (void (i8*, %swift.error*)* @"$s6Sample5helloyyFytSgyYaYbcfU_TQ0_" to void (%swift.context*)*), void (%swift.context*)** %9, align 8
  %10 = bitcast i8* %5 to %swift.context*
  musttail call swifttailcc void @"$sScTss5NeverORszABRs_rlE5sleep11nanosecondsys6UInt64V_tYaKFZ"(%swift.context* swiftasync %10, i64 1) #5
  ret void
}

define internal swifttailcc void @"$s6Sample5helloyyFytSgyYaYbcfU_TQ0_"(i8* swiftasync %0, %swift.error* swiftself %1) #0 {
entryresume.0:
  %2 = bitcast i8* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = call i8** @llvm.swift.async.context.addr() #5
  store i8* %3, i8** %4, align 8
  %async.ctx.frameptr1 = getelementptr inbounds i8, i8* %3, i32 24
  %FramePtr = bitcast i8* %async.ctx.frameptr1 to %"$s6Sample5helloyyFytSgyYaYbcfU_.Frame"*
  %vFrame = bitcast %"$s6Sample5helloyyFytSgyYaYbcfU_.Frame"* %FramePtr to i8*
  %5 = getelementptr inbounds %"$s6Sample5helloyyFytSgyYaYbcfU_.Frame", %"$s6Sample5helloyyFytSgyYaYbcfU_.Frame"* %FramePtr, i32 0, i32 0
  %.reload.addr = getelementptr inbounds %"$s6Sample5helloyyFytSgyYaYbcfU_.Frame", %"$s6Sample5helloyyFytSgyYaYbcfU_.Frame"* %FramePtr, i32 0, i32 1
  %.reload = load i8*, i8** %.reload.addr, align 8
  %6 = bitcast i8* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = call i8** @llvm.swift.async.context.addr() #5
  store i8* %7, i8** %8, align 8
  %9 = bitcast i8* %7 to %swift.context*
  store %swift.context* %9, %swift.context** %5, align 8
  call swiftcc void @swift_task_dealloc(i8* %.reload) #5
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %.reload)
  %10 = icmp ne %swift.error* %1, null
  br i1 %10, label %.from.1, label %.from.

.from.:                                           ; preds = %entryresume.0, %.from.1
  %11 = phi i1 [ true, %.from.1 ], [ false, %entryresume.0 ]
  %12 = zext i1 %11 to i8
  %13 = load %swift.context*, %swift.context** %5, align 8
  %14 = bitcast %swift.context* %13 to <{ %swift.context*, void (%swift.context*)*, i32 }>*
  %15 = getelementptr inbounds <{ %swift.context*, void (%swift.context*)*, i32 }>, <{ %swift.context*, void (%swift.context*)*, i32 }>* %14, i32 0, i32 1
  %16 = load void (%swift.context*)*, void (%swift.context*)** %15, align 8
  %17 = bitcast void (%swift.context*)* %16 to void (%swift.context*, i8)*
  %18 = load %swift.context*, %swift.context** %5, align 8
  %19 = bitcast void (%swift.context*, i8)* %17 to i8*
  musttail call swifttailcc void %17(%swift.context* swiftasync %18, i8 %12) #5
  ret void

.from.1:                                          ; preds = %entryresume.0
  %20 = phi %swift.error* [ %1, %entryresume.0 ]
  call void @swift_errorRelease(%swift.error* %1) #5
  br label %.from.
}

define linkonce_odr hidden swifttailcc void @"$sytSgIeghHd_AAIeghHr_TR"(%TytSg* noalias %0, %swift.context* swiftasync %1, i8* %2, %swift.refcounted* %3) #0 {
entry:
  call void @coro.devirt.trigger(i8* null)
  %4 = bitcast %swift.context* %1 to i8*
  %async.ctx.frameptr = getelementptr inbounds i8, i8* %4, i32 24
  %FramePtr = bitcast i8* %async.ctx.frameptr to %"$sytSgIeghHd_AAIeghHr_TR.Frame"*
  %5 = getelementptr inbounds %"$sytSgIeghHd_AAIeghHr_TR.Frame", %"$sytSgIeghHd_AAIeghHr_TR.Frame"* %FramePtr, i32 0, i32 0
  %.spill.addr = getelementptr inbounds %"$sytSgIeghHd_AAIeghHr_TR.Frame", %"$sytSgIeghHd_AAIeghHr_TR.Frame"* %FramePtr, i32 0, i32 1
  store %TytSg* %0, %TytSg** %.spill.addr, align 8
  store %swift.context* %1, %swift.context** %5, align 8
  %6 = bitcast i8* %2 to void (%swift.context*, %swift.refcounted*)*
  %7 = bitcast void (%swift.context*, %swift.refcounted*)* %6 to %swift.async_func_pointer*
  %8 = getelementptr inbounds %swift.async_func_pointer, %swift.async_func_pointer* %7, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = ptrtoint i32* %8 to i64
  %12 = add i64 %11, %10
  %13 = inttoptr i64 %12 to i8*
  %14 = bitcast i8* %13 to void (%swift.context*, %swift.refcounted*)*
  %15 = getelementptr inbounds %swift.async_func_pointer, %swift.async_func_pointer* %7, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = call swiftcc i8* @swift_task_alloc(i64 %17) #5
  %.spill.addr1 = getelementptr inbounds %"$sytSgIeghHd_AAIeghHr_TR.Frame", %"$sytSgIeghHd_AAIeghHr_TR.Frame"* %FramePtr, i32 0, i32 2
  store i8* %18, i8** %.spill.addr1, align 8
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %18)
  %19 = bitcast i8* %18 to <{ %swift.context*, void (%swift.context*)*, i32 }>*
  %20 = load %swift.context*, %swift.context** %5, align 8
  %21 = getelementptr inbounds <{ %swift.context*, void (%swift.context*)*, i32 }>, <{ %swift.context*, void (%swift.context*)*, i32 }>* %19, i32 0, i32 0
  store %swift.context* %20, %swift.context** %21, align 8
  %22 = getelementptr inbounds <{ %swift.context*, void (%swift.context*)*, i32 }>, <{ %swift.context*, void (%swift.context*)*, i32 }>* %19, i32 0, i32 1
  store void (%swift.context*)* bitcast (void (i8*, i8)* @"$sytSgIeghHd_AAIeghHr_TRTQ0_" to void (%swift.context*)*), void (%swift.context*)** %22, align 8
  %23 = bitcast i8* %18 to %swift.context*
  musttail call swifttailcc void %14(%swift.context* swiftasync %23, %swift.refcounted* swiftself %3) #5
  ret void
}

define internal swifttailcc void @"$sytSgIeghHd_AAIeghHr_TRTQ0_"(i8* swiftasync %0, i8 %1) #0 {
entryresume.0:
  %2 = bitcast i8* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = call i8** @llvm.swift.async.context.addr() #5
  store i8* %3, i8** %4, align 8
  %async.ctx.frameptr1 = getelementptr inbounds i8, i8* %3, i32 24
  %FramePtr = bitcast i8* %async.ctx.frameptr1 to %"$sytSgIeghHd_AAIeghHr_TR.Frame"*
  %vFrame = bitcast %"$sytSgIeghHd_AAIeghHr_TR.Frame"* %FramePtr to i8*
  %5 = getelementptr inbounds %"$sytSgIeghHd_AAIeghHr_TR.Frame", %"$sytSgIeghHd_AAIeghHr_TR.Frame"* %FramePtr, i32 0, i32 0
  %.reload.addr2 = getelementptr inbounds %"$sytSgIeghHd_AAIeghHr_TR.Frame", %"$sytSgIeghHd_AAIeghHr_TR.Frame"* %FramePtr, i32 0, i32 2
  %.reload3 = load i8*, i8** %.reload.addr2, align 8
  %.reload.addr = getelementptr inbounds %"$sytSgIeghHd_AAIeghHr_TR.Frame", %"$sytSgIeghHd_AAIeghHr_TR.Frame"* %FramePtr, i32 0, i32 1
  %.reload = load %TytSg*, %TytSg** %.reload.addr, align 8
  %6 = bitcast i8* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = call i8** @llvm.swift.async.context.addr() #5
  store i8* %7, i8** %8, align 8
  %9 = bitcast i8* %7 to %swift.context*
  store %swift.context* %9, %swift.context** %5, align 8
  %10 = trunc i8 %1 to i1
  call swiftcc void @swift_task_dealloc(i8* %.reload3) #5
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %.reload3)
  %11 = bitcast %TytSg* %.reload to i1*
  store i1 %10, i1* %11, align 1
  %12 = load %swift.context*, %swift.context** %5, align 8
  %13 = bitcast %swift.context* %12 to <{ %swift.context*, void (%swift.context*)*, i32 }>*
  %14 = getelementptr inbounds <{ %swift.context*, void (%swift.context*)*, i32 }>, <{ %swift.context*, void (%swift.context*)*, i32 }>* %13, i32 0, i32 1
  %15 = load void (%swift.context*)*, void (%swift.context*)** %14, align 8
  %16 = load %swift.context*, %swift.context** %5, align 8
  %17 = bitcast void (%swift.context*)* %15 to i8*
  musttail call swifttailcc void %15(%swift.context* swiftasync %16) #5
  ret void
}

define private swiftcc void @objectdestroy(%swift.refcounted* swiftself %0) #0 {
entry:
  %1 = bitcast %swift.refcounted* %0 to <{ %swift.refcounted, %swift.function }>*
  %2 = getelementptr inbounds <{ %swift.refcounted, %swift.function }>, <{ %swift.refcounted, %swift.function }>* %1, i32 0, i32 1
  %.data = getelementptr inbounds %swift.function, %swift.function* %2, i32 0, i32 1
  %3 = load %swift.refcounted*, %swift.refcounted** %.data, align 8
  call void @swift_release(%swift.refcounted* %3) #5
  call void @swift_deallocObject(%swift.refcounted* %0, i64 32, i64 7)
  ret void
}

; Function Attrs: nounwind
declare void @swift_release(%swift.refcounted*) #5

; Function Attrs: nounwind
declare void @swift_deallocObject(%swift.refcounted*, i64, i64) #5

; Function Attrs: nounwind
declare %swift.refcounted* @swift_allocObject(%swift.type*, i64, i64) #5

define internal swifttailcc void @"$sytSgIeghHd_AAIeghHr_TRTA"(%TytSg* noalias nocapture %0, %swift.context* swiftasync %1, %swift.refcounted* swiftself %2) #0 {
entry:
  call void @coro.devirt.trigger(i8* null)
  %3 = bitcast %swift.context* %1 to i8*
  %async.ctx.frameptr = getelementptr inbounds i8, i8* %3, i32 24
  %FramePtr = bitcast i8* %async.ctx.frameptr to %"$sytSgIeghHd_AAIeghHr_TRTA.Frame"*
  %4 = getelementptr inbounds %"$sytSgIeghHd_AAIeghHr_TRTA.Frame", %"$sytSgIeghHd_AAIeghHr_TRTA.Frame"* %FramePtr, i32 0, i32 0
  store %swift.context* %1, %swift.context** %4, align 8
  %5 = bitcast %swift.refcounted* %2 to <{ %swift.refcounted, %swift.function }>*
  %6 = getelementptr inbounds <{ %swift.refcounted, %swift.function }>, <{ %swift.refcounted, %swift.function }>* %5, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.function, %swift.function* %6, i32 0, i32 0
  %7 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.function, %swift.function* %6, i32 0, i32 1
  %8 = load %swift.refcounted*, %swift.refcounted** %.data, align 8
  %9 = load i32, i32* getelementptr inbounds (%swift.async_func_pointer, %swift.async_func_pointer* @"$sytSgIeghHd_AAIeghHr_TRTu", i32 0, i32 1), align 8
  %10 = zext i32 %9 to i64
  %11 = call swiftcc i8* @swift_task_alloc(i64 %10) #5
  %.spill.addr = getelementptr inbounds %"$sytSgIeghHd_AAIeghHr_TRTA.Frame", %"$sytSgIeghHd_AAIeghHr_TRTA.Frame"* %FramePtr, i32 0, i32 1
  store i8* %11, i8** %.spill.addr, align 8
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %11)
  %12 = bitcast i8* %11 to <{ %swift.context*, void (%swift.context*)*, i32 }>*
  %13 = bitcast i8* %11 to %swift.context*
  %14 = load %swift.context*, %swift.context** %4, align 8
  %15 = getelementptr inbounds <{ %swift.context*, void (%swift.context*)*, i32 }>, <{ %swift.context*, void (%swift.context*)*, i32 }>* %12, i32 0, i32 0
  store %swift.context* %14, %swift.context** %15, align 8
  %16 = getelementptr inbounds <{ %swift.context*, void (%swift.context*)*, i32 }>, <{ %swift.context*, void (%swift.context*)*, i32 }>* %12, i32 0, i32 1
  store void (%swift.context*)* bitcast (void (i8*)* @"$sytSgIeghHd_AAIeghHr_TRTATQ0_" to void (%swift.context*)*), void (%swift.context*)** %16, align 8
  musttail call swifttailcc void @"$sytSgIeghHd_AAIeghHr_TR"(%TytSg* noalias nocapture %0, %swift.context* swiftasync %13, i8* %7, %swift.refcounted* %8) #5
  ret void
}

define internal swifttailcc void @"$sytSgIeghHd_AAIeghHr_TRTATQ0_"(i8* swiftasync %0) #0 {
entryresume.0:
  %1 = bitcast i8* %0 to i8**
  %2 = load i8*, i8** %1, align 8
  %3 = call i8** @llvm.swift.async.context.addr() #5
  store i8* %2, i8** %3, align 8
  %async.ctx.frameptr1 = getelementptr inbounds i8, i8* %2, i32 24
  %FramePtr = bitcast i8* %async.ctx.frameptr1 to %"$sytSgIeghHd_AAIeghHr_TRTA.Frame"*
  %vFrame = bitcast %"$sytSgIeghHd_AAIeghHr_TRTA.Frame"* %FramePtr to i8*
  %4 = getelementptr inbounds %"$sytSgIeghHd_AAIeghHr_TRTA.Frame", %"$sytSgIeghHd_AAIeghHr_TRTA.Frame"* %FramePtr, i32 0, i32 0
  %.reload.addr = getelementptr inbounds %"$sytSgIeghHd_AAIeghHr_TRTA.Frame", %"$sytSgIeghHd_AAIeghHr_TRTA.Frame"* %FramePtr, i32 0, i32 1
  %.reload = load i8*, i8** %.reload.addr, align 8
  %5 = bitcast i8* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = call i8** @llvm.swift.async.context.addr() #5
  store i8* %6, i8** %7, align 8
  %8 = bitcast i8* %6 to %swift.context*
  store %swift.context* %8, %swift.context** %4, align 8
  call swiftcc void @swift_task_dealloc(i8* %.reload) #5
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %.reload)
  %9 = load %swift.context*, %swift.context** %4, align 8
  %10 = bitcast %swift.context* %9 to <{ %swift.context*, void (%swift.context*)*, i32 }>*
  %11 = getelementptr inbounds <{ %swift.context*, void (%swift.context*)*, i32 }>, <{ %swift.context*, void (%swift.context*)*, i32 }>* %10, i32 0, i32 1
  %12 = load void (%swift.context*)*, void (%swift.context*)** %11, align 8
  %13 = load %swift.context*, %swift.context** %4, align 8
  %14 = bitcast void (%swift.context*)* %12 to i8*
  musttail call swifttailcc void %12(%swift.context* swiftasync %13) #5
  ret void
}

; Function Attrs: nounwind
declare token @llvm.coro.id.async(i32, i32, i32, i8*) #5

; Function Attrs: nounwind
declare i8* @llvm.coro.begin(token, i8* writeonly) #5

; Function Attrs: argmemonly nounwind
declare extern_weak swiftcc i8* @swift_task_alloc(i64) #3

; Function Attrs: nounwind
declare i8* @llvm.coro.async.resume() #5

; Function Attrs: alwaysinline nounwind
define linkonce_odr hidden i8* @__swift_async_resume_project_context(i8* %0) #6 {
entry:
  %1 = bitcast i8* %0 to i8**
  %2 = load i8*, i8** %1, align 8
  %3 = call i8** @llvm.swift.async.context.addr()
  store i8* %2, i8** %3, align 8
  ret i8* %2
}

; Function Attrs: nounwind readnone
declare i8** @llvm.swift.async.context.addr() #7

; Function Attrs: nounwind
define internal swifttailcc void @__swift_suspend_dispatch_4(i8* %0, %TytSg* %1, %swift.context* %2, i8* %3, %swift.refcounted* %4) #5 {
entry:
  %5 = bitcast i8* %0 to void (%TytSg*, %swift.context*, i8*, %swift.refcounted*)*
  musttail call swifttailcc void %5(%TytSg* noalias nocapture %1, %swift.context* swiftasync %2, i8* %3, %swift.refcounted* %4)
  ret void
}

; Function Attrs: nounwind
declare { i8* } @llvm.coro.suspend.async.sl_p0i8s(i32, i8*, i8*, ...) #5

; Function Attrs: argmemonly nounwind
declare extern_weak swiftcc void @swift_task_dealloc(i8*) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
define internal swifttailcc void @__swift_suspend_dispatch_1(i8* %0, %swift.context* %1) #5 {
entry:
  %2 = bitcast i8* %0 to void (%swift.context*)*
  musttail call swifttailcc void %2(%swift.context* swiftasync %1)
  ret void
}

; Function Attrs: nounwind
declare i1 @llvm.coro.end.async(i8*, i1, ...) #5

define linkonce_odr hidden swiftcc %swift.refcounted* @"$sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYbcntcfC"(%TScPSg* noalias nocapture %0, i8* %1, %swift.refcounted* %2, %swift.type* %Success) #0 {
entry:
  %Success1 = alloca %swift.type*, align 8
  store %swift.type* %Success, %swift.type** %Success1, align 8
  %3 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i32, i32 }* @"$sScPSgMD") #7
  %4 = bitcast %swift.type* %3 to i8***
  %5 = getelementptr inbounds i8**, i8*** %4, i64 -1
  %.valueWitnesses = load i8**, i8*** %5, align 8, !invariant.load !32, !dereferenceable !33
  %6 = bitcast i8** %.valueWitnesses to %swift.vwtable*
  %7 = getelementptr inbounds %swift.vwtable, %swift.vwtable* %6, i32 0, i32 8
  %size = load i64, i64* %7, align 8, !invariant.load !32
  %8 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %8)
  %9 = bitcast i8* %8 to %TScPSg*
  %10 = call %TScPSg* @"$sScPSgWOc"(%TScPSg* %0, %TScPSg* %9)
  %11 = bitcast %TScPSg* %9 to %swift.opaque*
  %12 = call swiftcc %swift.metadata_response @"$sScPMa"(i64 0) #7
  %13 = extractvalue %swift.metadata_response %12, 0
  %14 = bitcast %swift.type* %13 to i8***
  %15 = getelementptr inbounds i8**, i8*** %14, i64 -1
  %.valueWitnesses2 = load i8**, i8*** %15, align 8, !invariant.load !32, !dereferenceable !33
  %16 = getelementptr inbounds i8*, i8** %.valueWitnesses2, i32 6
  %17 = load i8*, i8** %16, align 8, !invariant.load !32
  %getEnumTagSinglePayload = bitcast i8* %17 to i32 (%swift.opaque*, i32, %swift.type*)*
  %18 = call i32 %getEnumTagSinglePayload(%swift.opaque* noalias %11, i32 1, %swift.type* %13) #11
  %19 = icmp ne i32 %18, 1
  br i1 %19, label %23, label %21

20:                                               ; No predecessors!
  unreachable

21:                                               ; preds = %entry
  %22 = call %TScPSg* @"$sScPSgWOh"(%TScPSg* %9)
  br label %29

23:                                               ; preds = %entry
  %24 = bitcast %TScPSg* %9 to %swift.opaque*
  %25 = call swiftcc i8 @"$sScP8rawValues5UInt8Vvg"(%swift.opaque* noalias nocapture swiftself %24)
  %26 = getelementptr inbounds i8*, i8** %.valueWitnesses2, i32 1
  %27 = load i8*, i8** %26, align 8, !invariant.load !32
  %destroy = bitcast i8* %27 to void (%swift.opaque*, %swift.type*)*
  call void %destroy(%swift.opaque* noalias %24, %swift.type* %13) #5
  %28 = zext i8 %25 to i64
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i64 [ 0, %21 ], [ %28, %23 ]
  %31 = bitcast %TScPSg* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %31)
  %32 = or i64 %30, 7168
  %33 = call %TScPSg* @"$sScPSgWOh"(%TScPSg* %0)
  %34 = call noalias %swift.refcounted* @swift_allocObject(%swift.type* getelementptr inbounds (%swift.full_boxmetadata, %swift.full_boxmetadata* @metadata.3, i32 0, i32 2), i64 40, i64 7) #5
  %35 = bitcast %swift.refcounted* %34 to <{ %swift.refcounted, [8 x i8], %swift.function }>*
  %36 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %swift.function }>, <{ %swift.refcounted, [8 x i8], %swift.function }>* %35, i32 0, i32 1
  %37 = bitcast [8 x i8]* %36 to %swift.type**
  store %swift.type* %Success, %swift.type** %37, align 8
  %38 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %swift.function }>, <{ %swift.refcounted, [8 x i8], %swift.function }>* %35, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.function, %swift.function* %38, i32 0, i32 0
  store i8* %1, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.function, %swift.function* %38, i32 0, i32 1
  store %swift.refcounted* %2, %swift.refcounted** %.data, align 8
  %39 = call swiftcc %swift.async_task_and_context @swift_task_create(i64 %32, i64 0, %swift.type* %Success, i8* bitcast (%swift.async_func_pointer* @"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTATu" to i8*), %swift.refcounted* %34) #5
  %40 = extractvalue %swift.async_task_and_context %39, 0
  %41 = bitcast %swift.task* %40 to %swift.refcounted*
  %42 = extractvalue %swift.async_task_and_context %39, 1
  %43 = bitcast %swift.context* %42 to i8*
  ret %swift.refcounted* %41
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden %TScPSg* @"$sScPSgWOc"(%TScPSg* %0, %TScPSg* %1) #8 {
entry:
  %2 = bitcast %TScPSg* %1 to %swift.opaque*
  %3 = bitcast %TScPSg* %0 to %swift.opaque*
  %4 = bitcast %TScPSg* %0 to %swift.opaque*
  %5 = call swiftcc %swift.metadata_response @"$sScPMa"(i64 0) #7
  %6 = extractvalue %swift.metadata_response %5, 0
  %7 = bitcast %swift.type* %6 to i8***
  %8 = getelementptr inbounds i8**, i8*** %7, i64 -1
  %.valueWitnesses = load i8**, i8*** %8, align 8, !invariant.load !32, !dereferenceable !33
  %9 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 6
  %10 = load i8*, i8** %9, align 8, !invariant.load !32
  %getEnumTagSinglePayload = bitcast i8* %10 to i32 (%swift.opaque*, i32, %swift.type*)*
  %11 = call i32 %getEnumTagSinglePayload(%swift.opaque* noalias %4, i32 1, %swift.type* %6) #11
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %entry
  %14 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 2
  %15 = load i8*, i8** %14, align 8, !invariant.load !32
  %initializeWithCopy = bitcast i8* %15 to %swift.opaque* (%swift.opaque*, %swift.opaque*, %swift.type*)*
  %16 = call %swift.opaque* %initializeWithCopy(%swift.opaque* noalias %2, %swift.opaque* noalias %3, %swift.type* %6) #5
  %17 = bitcast %TScPSg* %1 to %swift.opaque*
  %18 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 7
  %19 = load i8*, i8** %18, align 8, !invariant.load !32
  %storeEnumTagSinglePayload = bitcast i8* %19 to void (%swift.opaque*, i32, i32, %swift.type*)*
  call void %storeEnumTagSinglePayload(%swift.opaque* noalias %17, i32 0, i32 1, %swift.type* %6) #5
  br label %28

20:                                               ; preds = %entry
  %21 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i32, i32 }* @"$sScPSgMD") #7
  %22 = bitcast %swift.type* %21 to i8***
  %23 = getelementptr inbounds i8**, i8*** %22, i64 -1
  %.valueWitnesses1 = load i8**, i8*** %23, align 8, !invariant.load !32, !dereferenceable !33
  %24 = bitcast i8** %.valueWitnesses1 to %swift.vwtable*
  %25 = getelementptr inbounds %swift.vwtable, %swift.vwtable* %24, i32 0, i32 8
  %size = load i64, i64* %25, align 8, !invariant.load !32
  %26 = bitcast %TScPSg* %1 to i8*
  %27 = bitcast %TScPSg* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %27, i64 %size, i1 false)
  br label %28

28:                                               ; preds = %20, %13
  ret %TScPSg* %1
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind
define linkonce_odr hidden %TScPSg* @"$sScPSgWOh"(%TScPSg* %0) #8 {
entry:
  %1 = bitcast %TScPSg* %0 to %swift.opaque*
  %2 = call swiftcc %swift.metadata_response @"$sScPMa"(i64 0) #7
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = bitcast %swift.type* %3 to i8***
  %5 = getelementptr inbounds i8**, i8*** %4, i64 -1
  %.valueWitnesses = load i8**, i8*** %5, align 8, !invariant.load !32, !dereferenceable !33
  %6 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 6
  %7 = load i8*, i8** %6, align 8, !invariant.load !32
  %getEnumTagSinglePayload = bitcast i8* %7 to i32 (%swift.opaque*, i32, %swift.type*)*
  %8 = call i32 %getEnumTagSinglePayload(%swift.opaque* noalias %1, i32 1, %swift.type* %3) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %entry
  %11 = bitcast %TScPSg* %0 to %swift.opaque*
  %12 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 1
  %13 = load i8*, i8** %12, align 8, !invariant.load !32
  %destroy = bitcast i8* %13 to void (%swift.opaque*, %swift.type*)*
  call void %destroy(%swift.opaque* noalias %11, %swift.type* %3) #5
  br label %14

14:                                               ; preds = %10, %entry
  ret %TScPSg* %0
}

define linkonce_odr hidden swifttailcc void @"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTR"(%swift.opaque* noalias nocapture %0, %swift.context* swiftasync %1, i8* %2, %swift.refcounted* %3, %swift.type* %Success) #0 {
entry:
  call void @coro.devirt.trigger(i8* null)
  %4 = bitcast %swift.context* %1 to i8*
  %async.ctx.frameptr = getelementptr inbounds i8, i8* %4, i32 24
  %FramePtr = bitcast i8* %async.ctx.frameptr to %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTR.Frame"*
  %5 = getelementptr inbounds %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTR.Frame", %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTR.Frame"* %FramePtr, i32 0, i32 0
  store %swift.context* %1, %swift.context** %5, align 8
  %6 = bitcast i8* %2 to void (%swift.opaque*, %swift.context*, %swift.refcounted*)*
  %7 = bitcast void (%swift.opaque*, %swift.context*, %swift.refcounted*)* %6 to %swift.async_func_pointer*
  %8 = getelementptr inbounds %swift.async_func_pointer, %swift.async_func_pointer* %7, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = ptrtoint i32* %8 to i64
  %12 = add i64 %11, %10
  %13 = inttoptr i64 %12 to i8*
  %14 = bitcast i8* %13 to void (%swift.opaque*, %swift.context*, %swift.refcounted*)*
  %15 = getelementptr inbounds %swift.async_func_pointer, %swift.async_func_pointer* %7, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = call swiftcc i8* @swift_task_alloc(i64 %17) #5
  %.spill.addr = getelementptr inbounds %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTR.Frame", %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTR.Frame"* %FramePtr, i32 0, i32 1
  store i8* %18, i8** %.spill.addr, align 8
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %18)
  %19 = bitcast i8* %18 to <{ %swift.context*, void (%swift.context*)*, i32 }>*
  %20 = load %swift.context*, %swift.context** %5, align 8
  %21 = getelementptr inbounds <{ %swift.context*, void (%swift.context*)*, i32 }>, <{ %swift.context*, void (%swift.context*)*, i32 }>* %19, i32 0, i32 0
  store %swift.context* %20, %swift.context** %21, align 8
  %22 = getelementptr inbounds <{ %swift.context*, void (%swift.context*)*, i32 }>, <{ %swift.context*, void (%swift.context*)*, i32 }>* %19, i32 0, i32 1
  store void (%swift.context*)* bitcast (void (i8*)* @"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTQ0_" to void (%swift.context*)*), void (%swift.context*)** %22, align 8
  %23 = bitcast i8* %18 to %swift.context*
  musttail call swifttailcc void %14(%swift.opaque* noalias nocapture %0, %swift.context* swiftasync %23, %swift.refcounted* swiftself %3) #5
  ret void
}

define internal swifttailcc void @"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTQ0_"(i8* swiftasync %0) #0 {
entryresume.0:
  %1 = bitcast i8* %0 to i8**
  %2 = load i8*, i8** %1, align 8
  %3 = call i8** @llvm.swift.async.context.addr() #5
  store i8* %2, i8** %3, align 8
  %async.ctx.frameptr1 = getelementptr inbounds i8, i8* %2, i32 24
  %FramePtr = bitcast i8* %async.ctx.frameptr1 to %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTR.Frame"*
  %vFrame = bitcast %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTR.Frame"* %FramePtr to i8*
  %4 = getelementptr inbounds %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTR.Frame", %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTR.Frame"* %FramePtr, i32 0, i32 0
  %.reload.addr = getelementptr inbounds %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTR.Frame", %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTR.Frame"* %FramePtr, i32 0, i32 1
  %.reload = load i8*, i8** %.reload.addr, align 8
  %5 = bitcast i8* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = call i8** @llvm.swift.async.context.addr() #5
  store i8* %6, i8** %7, align 8
  %8 = bitcast i8* %6 to %swift.context*
  store %swift.context* %8, %swift.context** %4, align 8
  call swiftcc void @swift_task_dealloc(i8* %.reload) #5
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %.reload)
  %9 = load %swift.context*, %swift.context** %4, align 8
  %10 = bitcast %swift.context* %9 to <{ %swift.context*, void (%swift.context*)*, i32 }>*
  %11 = getelementptr inbounds <{ %swift.context*, void (%swift.context*)*, i32 }>, <{ %swift.context*, void (%swift.context*)*, i32 }>* %10, i32 0, i32 1
  %12 = load void (%swift.context*)*, void (%swift.context*)** %11, align 8
  %13 = bitcast void (%swift.context*)* %12 to void (%swift.context*, %swift.error*)*
  %14 = load %swift.context*, %swift.context** %4, align 8
  %15 = bitcast void (%swift.context*, %swift.error*)* %13 to i8*
  musttail call swifttailcc void %13(%swift.context* swiftasync %14, %swift.error* swiftself null) #5
  ret void
}

define private swiftcc void @objectdestroy.2(%swift.refcounted* swiftself %0) #0 {
entry:
  %Success1 = alloca %swift.type*, align 8
  %1 = bitcast %swift.refcounted* %0 to <{ %swift.refcounted, [8 x i8], %swift.function }>*
  %2 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %swift.function }>, <{ %swift.refcounted, [8 x i8], %swift.function }>* %1, i32 0, i32 1
  %3 = bitcast [8 x i8]* %2 to %swift.type**
  %Success = load %swift.type*, %swift.type** %3, align 8
  store %swift.type* %Success, %swift.type** %Success1, align 8
  %4 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %swift.function }>, <{ %swift.refcounted, [8 x i8], %swift.function }>* %1, i32 0, i32 2
  %.data = getelementptr inbounds %swift.function, %swift.function* %4, i32 0, i32 1
  %5 = load %swift.refcounted*, %swift.refcounted** %.data, align 8
  call void @swift_release(%swift.refcounted* %5) #5
  call void @swift_deallocObject(%swift.refcounted* %0, i64 40, i64 7)
  ret void
}

define internal swifttailcc void @"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTA"(%swift.opaque* noalias nocapture %0, %swift.context* swiftasync %1, %swift.refcounted* swiftself %2) #0 {
entry:
  call void @coro.devirt.trigger(i8* null)
  %3 = bitcast %swift.context* %1 to i8*
  %async.ctx.frameptr = getelementptr inbounds i8, i8* %3, i32 24
  %FramePtr = bitcast i8* %async.ctx.frameptr to %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTA.Frame"*
  %4 = getelementptr inbounds %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTA.Frame", %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTA.Frame"* %FramePtr, i32 0, i32 0
  store %swift.context* %1, %swift.context** %4, align 8
  %5 = bitcast %swift.refcounted* %2 to <{ %swift.refcounted, [8 x i8], %swift.function }>*
  %6 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %swift.function }>, <{ %swift.refcounted, [8 x i8], %swift.function }>* %5, i32 0, i32 1
  %7 = bitcast [8 x i8]* %6 to %swift.type**
  %Success = load %swift.type*, %swift.type** %7, align 8
  %8 = getelementptr inbounds <{ %swift.refcounted, [8 x i8], %swift.function }>, <{ %swift.refcounted, [8 x i8], %swift.function }>* %5, i32 0, i32 2
  %.fn = getelementptr inbounds %swift.function, %swift.function* %8, i32 0, i32 0
  %9 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.function, %swift.function* %8, i32 0, i32 1
  %10 = load %swift.refcounted*, %swift.refcounted** %.data, align 8
  %11 = load i32, i32* getelementptr inbounds (%swift.async_func_pointer, %swift.async_func_pointer* @"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTu", i32 0, i32 1), align 8
  %12 = zext i32 %11 to i64
  %13 = call swiftcc i8* @swift_task_alloc(i64 %12) #5
  %.spill.addr = getelementptr inbounds %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTA.Frame", %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTA.Frame"* %FramePtr, i32 0, i32 1
  store i8* %13, i8** %.spill.addr, align 8
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %13)
  %14 = bitcast i8* %13 to <{ %swift.context*, void (%swift.context*)*, i32 }>*
  %15 = bitcast i8* %13 to %swift.context*
  %16 = load %swift.context*, %swift.context** %4, align 8
  %17 = getelementptr inbounds <{ %swift.context*, void (%swift.context*)*, i32 }>, <{ %swift.context*, void (%swift.context*)*, i32 }>* %14, i32 0, i32 0
  store %swift.context* %16, %swift.context** %17, align 8
  %18 = getelementptr inbounds <{ %swift.context*, void (%swift.context*)*, i32 }>, <{ %swift.context*, void (%swift.context*)*, i32 }>* %14, i32 0, i32 1
  store void (%swift.context*)* bitcast (void (i8*, %swift.error*)* @"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTATQ0_" to void (%swift.context*)*), void (%swift.context*)** %18, align 8
  musttail call swifttailcc void @"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTR"(%swift.opaque* noalias nocapture %0, %swift.context* swiftasync %15, i8* %9, %swift.refcounted* %10, %swift.type* %Success) #5
  ret void
}

define internal swifttailcc void @"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTATQ0_"(i8* swiftasync %0, %swift.error* swiftself %1) #0 {
entryresume.0:
  %2 = bitcast i8* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = call i8** @llvm.swift.async.context.addr() #5
  store i8* %3, i8** %4, align 8
  %async.ctx.frameptr1 = getelementptr inbounds i8, i8* %3, i32 24
  %FramePtr = bitcast i8* %async.ctx.frameptr1 to %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTA.Frame"*
  %vFrame = bitcast %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTA.Frame"* %FramePtr to i8*
  %5 = getelementptr inbounds %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTA.Frame", %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTA.Frame"* %FramePtr, i32 0, i32 0
  %.reload.addr = getelementptr inbounds %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTA.Frame", %"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTA.Frame"* %FramePtr, i32 0, i32 1
  %.reload = load i8*, i8** %.reload.addr, align 8
  %6 = bitcast i8* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = call i8** @llvm.swift.async.context.addr() #5
  store i8* %7, i8** %8, align 8
  %9 = bitcast i8* %7 to %swift.context*
  store %swift.context* %9, %swift.context** %5, align 8
  call swiftcc void @swift_task_dealloc(i8* %.reload) #5
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %.reload)
  %10 = load %swift.context*, %swift.context** %5, align 8
  %11 = bitcast %swift.context* %10 to <{ %swift.context*, void (%swift.context*)*, i32 }>*
  %12 = getelementptr inbounds <{ %swift.context*, void (%swift.context*)*, i32 }>, <{ %swift.context*, void (%swift.context*)*, i32 }>* %11, i32 0, i32 1
  %13 = load void (%swift.context*)*, void (%swift.context*)** %12, align 8
  %14 = bitcast void (%swift.context*)* %13 to void (%swift.context*, %swift.error*)*
  %15 = load %swift.context*, %swift.context** %5, align 8
  %16 = bitcast void (%swift.context*, %swift.error*)* %14 to i8*
  musttail call swifttailcc void %14(%swift.context* swiftasync %15, %swift.error* swiftself %1) #5
  ret void
}

; Function Attrs: nounwind
define internal swifttailcc void @__swift_suspend_dispatch_5(i8* %0, %swift.opaque* %1, %swift.context* %2, i8* %3, %swift.refcounted* %4, %swift.type* %5) #5 {
entry:
  %6 = bitcast i8* %0 to void (%swift.opaque*, %swift.context*, i8*, %swift.refcounted*, %swift.type*)*
  musttail call swifttailcc void %6(%swift.opaque* noalias nocapture %1, %swift.context* swiftasync %2, i8* %3, %swift.refcounted* %4, %swift.type* %5)
  ret void
}

; Function Attrs: nounwind
declare { i8*, %swift.error* } @llvm.coro.suspend.async.sl_p0i8p0s_swift.errorss(i32, i8*, i8*, ...) #5

; Function Attrs: nounwind
define internal swifttailcc void @__swift_suspend_dispatch_2(i8* %0, %swift.context* %1, %swift.error* %2) #5 {
entry:
  %3 = bitcast i8* %0 to void (%swift.context*, %swift.error*)*
  musttail call swifttailcc void %3(%swift.context* swiftasync %1, %swift.error* swiftself %2)
  ret void
}

; Function Attrs: argmemonly nounwind
declare extern_weak swiftcc %swift.async_task_and_context @swift_task_create(i64, i64, %swift.type*, i8*, %swift.refcounted*) #3

declare extern_weak swiftcc i8 @"$sScP8rawValues5UInt8Vvg"(%swift.opaque* noalias nocapture swiftself) #0

; Function Attrs: nounwind
define internal swifttailcc void @__swift_suspend_dispatch_3(i8* %0, %swift.opaque* %1, %swift.context* %2, %swift.refcounted* %3) #5 {
entry:
  %4 = bitcast i8* %0 to void (%swift.opaque*, %swift.context*, %swift.refcounted*)*
  musttail call swifttailcc void %4(%swift.opaque* noalias nocapture %1, %swift.context* swiftasync %2, %swift.refcounted* swiftself %3)
  ret void
}

; Function Attrs: nounwind
define internal swifttailcc void @__swift_suspend_dispatch_2.4(i8* %0, %swift.context* %1, %swift.error* %2) #5 {
entry:
  %3 = bitcast i8* %0 to void (%swift.context*, %swift.error*)*
  musttail call swifttailcc void %3(%swift.context* swiftasync %1, %swift.error* swiftself %2)
  ret void
}

; Function Attrs: nounwind
define internal swifttailcc void @__swift_suspend_dispatch_2.5(i8* %0, %swift.context* %1, %swift.refcounted* %2) #5 {
entry:
  %3 = bitcast i8* %0 to void (%swift.context*, %swift.refcounted*)*
  musttail call swifttailcc void %3(%swift.context* swiftasync %1, %swift.refcounted* swiftself %2)
  ret void
}

; Function Attrs: nounwind
declare { i8*, i8 } @llvm.coro.suspend.async.sl_p0i8i8s(i32, i8*, i8*, ...) #5

; Function Attrs: nounwind
define internal swifttailcc void @__swift_suspend_dispatch_1.6(i8* %0, %swift.context* %1) #5 {
entry:
  %2 = bitcast i8* %0 to void (%swift.context*)*
  musttail call swifttailcc void %2(%swift.context* swiftasync %1)
  ret void
}

declare extern_weak swifttailcc void @"$sScTss5NeverORszABRs_rlE5sleep11nanosecondsys6UInt64V_tYaKFZ"(%swift.context* swiftasync, i64) #0

; Function Attrs: nounwind
define internal swifttailcc void @__swift_suspend_dispatch_2.7(i8* %0, %swift.context* %1, i64 %2) #5 {
entry:
  %3 = bitcast i8* %0 to void (%swift.context*, i64)*
  musttail call swifttailcc void %3(%swift.context* swiftasync %1, i64 %2)
  ret void
}

; Function Attrs: nounwind
declare void @swift_errorRelease(%swift.error*) #5

; Function Attrs: nounwind
define internal swifttailcc void @__swift_suspend_dispatch_2.8(i8* %0, %swift.context* %1, i8 %2) #5 {
entry:
  %3 = bitcast i8* %0 to void (%swift.context*, i8)*
  musttail call swifttailcc void %3(%swift.context* swiftasync %1, i8 %2)
  ret void
}

; Function Attrs: alwaysinline
define private void @coro.devirt.trigger(i8* %0) #9 {
entry:
  ret void
}

; Function Attrs: argmemonly nounwind readonly
declare i8* @llvm.coro.subfn.addr(i8* nocapture readonly, i8) #10

attributes #0 = { "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.3a,+zcm,+zcz" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind readnone "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.3a,+zcm,+zcz" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nosync nounwind readnone willreturn }
attributes #3 = { argmemonly nounwind }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { nounwind }
attributes #6 = { alwaysinline nounwind "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.3a,+zcm,+zcz" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone }
attributes #8 = { noinline nounwind "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-a12" "target-features"="+aes,+crc,+crypto,+fp-armv8,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+v8.3a,+zcm,+zcz" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { alwaysinline }
attributes #10 = { argmemonly nounwind readonly }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10, !11, !12}
!swift.module.flags = !{!13}
!llvm.asan.globals = !{!14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27}
!llvm.linker.options = !{!28, !29, !30, !31}

!0 = !{i32 2, !"SDK Version", [3 x i32] [i32 12, i32 0, i32 0]}
!1 = !{i32 1, !"Objective-C Version", i32 2}
!2 = !{i32 1, !"Objective-C Image Info Version", i32 0}
!3 = !{i32 1, !"Objective-C Image Info Section", !"__DATA,__objc_imageinfo,regular,no_dead_strip"}
!4 = !{i32 4, !"Objective-C Garbage Collection", i32 84215552}
!5 = !{i32 1, !"Objective-C Class Properties", i32 64}
!6 = !{i32 1, !"wchar_size", i32 4}
!7 = !{i32 1, !"branch-target-enforcement", i32 0}
!8 = !{i32 1, !"sign-return-address", i32 0}
!9 = !{i32 1, !"sign-return-address-all", i32 0}
!10 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!11 = !{i32 7, !"PIC Level", i32 2}
!12 = !{i32 1, !"Swift Version", i32 7}
!13 = !{!"standard-library", i1 false}
!14 = !{<{ [5 x i8], i8 }>* @"symbolic ScPSg", null, null, i1 false, i1 true}
!15 = !{<{ [11 x i8], i8 }>* @"symbolic ytSgIeghHd_", null, null, i1 false, i1 true}
!16 = !{{ i32, i32, i32, i32 }* @"\01l__swift5_reflection_descriptor", null, null, i1 false, i1 true}
!17 = !{%swift.async_func_pointer* @"$sytSgIeghHd_AAIeghHr_TRTATu", null, null, i1 false, i1 true}
!18 = !{<{ [4 x i8], i8 }>* @"symbolic ytSg", null, null, i1 false, i1 true}
!19 = !{<{ [8 x i8], i8 }>* @"symbolic xIeghHr_", null, null, i1 false, i1 true}
!20 = !{<{ [1 x i8], i8 }>* @"symbolic x", null, null, i1 false, i1 true}
!21 = !{<{ [2 x i8], i8 }>* @"symbolic B0", null, null, i1 false, i1 true}
!22 = !{{ i32, i32, i32, i32, i32, i32 }* @"\01l__swift5_reflection_descriptor.1", null, null, i1 false, i1 true}
!23 = !{%swift.async_func_pointer* @"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTATu", null, null, i1 false, i1 true}
!24 = !{%swift.async_func_pointer* @"$sxIeghHr_xs5Error_pIegHrzo_s5NeverORs_r0_lTRTu", null, null, i1 false, i1 true}
!25 = !{%swift.async_func_pointer* @"$sytSgIeghHd_AAIeghHr_TRTu", null, null, i1 false, i1 true}
!26 = !{%swift.async_func_pointer* @"$s6Sample5helloyyFytSgyYaYbcfU_Tu", null, null, i1 false, i1 true}
!27 = !{[5 x i8*]* @llvm.used, null, null, i1 false, i1 true}
!28 = !{!"-lswiftSwiftOnoneSupport"}
!29 = !{!"-lswiftCore"}
!30 = !{!"-lswift_Concurrency"}
!31 = !{!"-lobjc"}
!32 = !{}
!33 = !{i64 88}
